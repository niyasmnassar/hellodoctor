{"ast":null,"code":"var _jsxFileName = \"E:\\\\react\\\\bookapp\\\\src\\\\components\\\\PrivateRoute.js\";\nimport React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { isLogin } from \"../utils\";\n\nconst PrivateRoute = ({\n  component: Component,\n  ...rest\n}) => {\n  return (// Show the component only when the user is logged in\n    // Otherwise, redirect the user to /signin page\n    React.createElement(Route, Object.assign({}, rest, {\n      render: props => isLogin() ? React.createElement(Component, Object.assign({}, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      })) : React.createElement(Redirect, {\n        to: \"/signin\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    }))\n  );\n};\n\nexport default PrivateRoute;","map":{"version":3,"sources":["E:/react/bookapp/src/components/PrivateRoute.js"],"names":["React","Route","Redirect","isLogin","PrivateRoute","component","Component","rest","props"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,OAAT,QAAwB,UAAxB;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAD,KAAuC;AAC1D,SACE;AACA;AACA,wBAAC,KAAD,oBACMA,IADN;AAEE,MAAA,MAAM,EAAEC,KAAK,IACXL,OAAO,KAAK,oBAAC,SAAD,oBAAeK,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAL,GAAgC,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAH3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHF;AAUD,CAXD;;AAaA,eAAeJ,YAAf","sourcesContent":["import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { isLogin } from \"../utils\";\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n  return (\r\n    // Show the component only when the user is logged in\r\n    // Otherwise, redirect the user to /signin page\r\n    <Route\r\n      {...rest}\r\n      render={props =>\r\n        isLogin() ? <Component {...props} /> : <Redirect to=\"/signin\" />\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n"]},"metadata":{},"sourceType":"module"}