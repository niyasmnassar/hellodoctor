{"ast":null,"code":"var _jsxFileName = \"E:\\\\react\\\\bookapp\\\\src\\\\components\\\\signIn.js\";\nimport React, { useReducer } from \"react\";\nimport useForm from \"./useForm\";\nimport validate from \"./LoginFormValidationRules\";\nimport { Row, Container, Button, FormGroup, Input, Col, Card, CardBody, CardTitle, CardSubtitle } from \"reactstrap\";\nimport { logDOM } from \"@testing-library/react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faUserCircle, faUserLock } from \"@fortawesome/free-solid-svg-icons\";\nimport { login } from \"../utils\";\nimport { BrowserRouter as Router, Switch, Route, Link, Redirect, useHistory, useLocation } from \"react-router-dom\";\nimport InnerBgImg from \"./../assets/images/login-bg.jpg\";\n\nconst useValidation = config => {\n  return {\n    errors: {},\n    getFormProps: e => ({}),\n    // TODO: Still need to implement\n    getFieldProps: fieldName => ({})\n  };\n};\n\nconst config = {\n  fields: {\n    username: {\n      isRequired: {\n        message: \"Please fill out a username\"\n      }\n    },\n    password: {\n      isRequired: {\n        message: \"Please fill out a password\"\n      },\n      isMinLength: {\n        value: 6,\n        message: \"Please make it more secure\"\n      }\n    }\n  },\n  onSubmit: e => {\n    /* handle submit */\n  }\n};\nconst {\n  getFieldProps,\n  getFormProps,\n  errors\n} = useValidation(config);\n\nconst SignIn = () => {\n  const {\n    getFieldProps,\n    getFormProps,\n    errors\n  } = useValidation(config);\n  return React.createElement(\"form\", Object.assign({}, getFormProps(), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Username\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), React.createElement(\"input\", Object.assign({}, getFieldProps(\"username\"), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  })), errors.username && React.createElement(\"div\", {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, errors.username))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"Password\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), React.createElement(\"input\", Object.assign({\n    type: \"password\"\n  }, getFieldProps(\"password\"), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  })), errors.password && React.createElement(\"div\", {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, errors.password))), React.createElement(Button // onClick={() => handleLogin()}\n  , {\n    className: \"cta-book\",\n    color: \"primary\",\n    size: \"lg\",\n    block: true,\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"Login\"));\n}; // const SignIn = props => {\n// const handleLogin = () => {\n//   console.log(handleSubmit.values);\n//   login();\n//   props.history.push(\"/\");\n// };\n// return (\n//   <div\n//     className=\"users-wrap\"\n//     style={{ backgroundImage: \"url(\" + InnerBgImg + \")\" }}\n//   >\n//     <Container className=\"h-100\">\n//       <Row className=\"h-100 justify-content-center align-items-center\">\n//         <Col sm={12} md={6} lg={6} className=\"mx-auto slogan\">\n//           <img\n//             className=\"img-fluid align-self-center\"\n//             src={require(\"./../assets/images/logo-nav.png\")}\n//             alt=\"logo\"\n//           />\n//           <h2>\n//             <span>Connect with a</span> Doctor\n//           </h2>\n//         </Col>\n//         <Col sm={12} md={5} lg={5} className=\"mx-auto\">\n//           <Card>\n//             <CardBody>\n//               <CardTitle>\n//                 <span className=\"login-icon\">\n//                   <FontAwesomeIcon icon={faUserLock} />\n//                 </span>\n//               </CardTitle>\n//               <CardSubtitle className=\"mb-3\">\n//                 <h2>Sign In</h2>\n//               </CardSubtitle>\n//               <form onSubmit={handleSubmit} noValidate>\n//                 <div className=\"field\">\n//                   <FormGroup>\n//                     <input\n//                       autoComplete=\"off\"\n//                       className={`input form-control form-control-lg ${errors.email &&\n//                         \"is-danger\"}`}\n//                       type=\"email\"\n//                       name=\"email\"\n//                       onChange={handleChange}\n//                       value={values.email || \"\"}\n//                       required\n//                     />\n//                     <span className=\"floating-label\">\n//                       Your email address*\n//                     </span>\n//                     {errors.email && (\n//                       <p className=\"help is-danger\">{errors.email}</p>\n//                     )}\n//                   </FormGroup>\n//                 </div>\n//                 <div className=\"field\">\n//                   <FormGroup>\n//                     <input\n//                       className={`input form-control form-control-lg ${errors.password &&\n//                         \"is-danger\"}`}\n//                       type=\"password\"\n//                       name=\"password\"\n//                       bssize=\"lg\"\n//                       onChange={handleChange}\n//                       value={values.password || \"\"}\n//                       required\n//                     />\n//                     <span className=\"floating-label\">Enter Password*</span>\n//                     {errors.password && (\n//                       <p className=\"help is-danger\">{errors.password}</p>\n//                     )}\n//                   </FormGroup>\n//                 </div>\n//                 <Button\n//                   // onClick={() => handleLogin()}\n//                   className=\"cta-book\"\n//                   color=\"primary\"\n//                   size=\"lg\"\n//                   block\n//                   type=\"submit\"\n//                 >\n//                   Login\n//                 </Button>\n//               </form>\n//               <div className=\"d-flex\">\n//                 <Link to=\"/signup\" className=\"ml-auto log-text\" href=\"#\">\n//                   Don't have an account? Sign Up\n//                 </Link>\n//               </div>\n//             </CardBody>\n//           </Card>\n//         </Col>\n//       </Row>\n//     </Container>\n//   </div>\n// );\n// };\n\n\nexport default SignIn;","map":{"version":3,"sources":["E:/react/bookapp/src/components/signIn.js"],"names":["React","useReducer","useForm","validate","Row","Container","Button","FormGroup","Input","Col","Card","CardBody","CardTitle","CardSubtitle","logDOM","FontAwesomeIcon","faUserCircle","faUserLock","login","BrowserRouter","Router","Switch","Route","Link","Redirect","useHistory","useLocation","InnerBgImg","useValidation","config","errors","getFormProps","e","getFieldProps","fieldName","fields","username","isRequired","message","password","isMinLength","value","onSubmit","SignIn"],"mappings":"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","sourcesContent":["import React, { useReducer } from \"react\";\r\nimport useForm from \"./useForm\";\r\nimport validate from \"./LoginFormValidationRules\";\r\nimport { Row, Container, Button, FormGroup, Input, Col, Card, CardBody, CardTitle, CardSubtitle } from \"reactstrap\";\r\nimport { logDOM } from \"@testing-library/react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faUserCircle, faUserLock } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { login } from \"../utils\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  Redirect,\r\n  useHistory,\r\n  useLocation\r\n} from \"react-router-dom\";\r\nimport InnerBgImg from \"./../assets/images/login-bg.jpg\";\r\nconst useValidation = config => {\r\n  return {\r\n    errors: {},\r\n    getFormProps: e => ({}), // TODO: Still need to implement\r\n    getFieldProps: fieldName => ({})\r\n  };\r\n};\r\nconst config = {\r\n  fields: {\r\n    username: {\r\n      isRequired: { message: \"Please fill out a username\" }\r\n    },\r\n    password: {\r\n      isRequired: { message: \"Please fill out a password\" },\r\n      isMinLength: { value: 6, message: \"Please make it more secure\" }\r\n    }\r\n  },\r\n  onSubmit: e => {\r\n    /* handle submit */\r\n  }\r\n};\r\nconst { getFieldProps, getFormProps, errors } = useValidation(config);\r\nconst SignIn = () => {\r\n  const { getFieldProps, getFormProps, errors } = useValidation(config);\r\n  return (\r\n    <form {...getFormProps()}>\r\n      <div>\r\n        <label>\r\n          Username\r\n          <br />\r\n          <input {...getFieldProps(\"username\")} />\r\n          {errors.username && <div className=\"error\">{errors.username}</div>}\r\n        </label>\r\n      </div>\r\n      <div>\r\n        <label>\r\n          Password\r\n          <br />\r\n          <input type=\"password\" {...getFieldProps(\"password\")} />\r\n          {errors.password && <div className=\"error\">{errors.password}</div>}\r\n        </label>\r\n      </div>\r\n      <Button\r\n        // onClick={() => handleLogin()}\r\n        className=\"cta-book\"\r\n        color=\"primary\"\r\n        size=\"lg\"\r\n        block\r\n        type=\"submit\"\r\n      >\r\n        Login\r\n      </Button>\r\n    </form>\r\n  );\r\n};\r\n// const SignIn = props => {\r\n\r\n\r\n  // const handleLogin = () => {\r\n  //   console.log(handleSubmit.values);\r\n  //   login();\r\n  //   props.history.push(\"/\");\r\n  // };\r\n\r\n  // return (\r\n  //   <div\r\n  //     className=\"users-wrap\"\r\n  //     style={{ backgroundImage: \"url(\" + InnerBgImg + \")\" }}\r\n  //   >\r\n  //     <Container className=\"h-100\">\r\n  //       <Row className=\"h-100 justify-content-center align-items-center\">\r\n  //         <Col sm={12} md={6} lg={6} className=\"mx-auto slogan\">\r\n  //           <img\r\n  //             className=\"img-fluid align-self-center\"\r\n  //             src={require(\"./../assets/images/logo-nav.png\")}\r\n  //             alt=\"logo\"\r\n  //           />\r\n  //           <h2>\r\n  //             <span>Connect with a</span> Doctor\r\n  //           </h2>\r\n  //         </Col>\r\n  //         <Col sm={12} md={5} lg={5} className=\"mx-auto\">\r\n  //           <Card>\r\n  //             <CardBody>\r\n  //               <CardTitle>\r\n  //                 <span className=\"login-icon\">\r\n  //                   <FontAwesomeIcon icon={faUserLock} />\r\n  //                 </span>\r\n  //               </CardTitle>\r\n  //               <CardSubtitle className=\"mb-3\">\r\n  //                 <h2>Sign In</h2>\r\n  //               </CardSubtitle>\r\n  //               <form onSubmit={handleSubmit} noValidate>\r\n  //                 <div className=\"field\">\r\n  //                   <FormGroup>\r\n  //                     <input\r\n  //                       autoComplete=\"off\"\r\n  //                       className={`input form-control form-control-lg ${errors.email &&\r\n  //                         \"is-danger\"}`}\r\n  //                       type=\"email\"\r\n  //                       name=\"email\"\r\n  //                       onChange={handleChange}\r\n  //                       value={values.email || \"\"}\r\n  //                       required\r\n  //                     />\r\n  //                     <span className=\"floating-label\">\r\n  //                       Your email address*\r\n  //                     </span>\r\n  //                     {errors.email && (\r\n  //                       <p className=\"help is-danger\">{errors.email}</p>\r\n  //                     )}\r\n  //                   </FormGroup>\r\n  //                 </div>\r\n  //                 <div className=\"field\">\r\n  //                   <FormGroup>\r\n  //                     <input\r\n  //                       className={`input form-control form-control-lg ${errors.password &&\r\n  //                         \"is-danger\"}`}\r\n  //                       type=\"password\"\r\n  //                       name=\"password\"\r\n  //                       bssize=\"lg\"\r\n  //                       onChange={handleChange}\r\n  //                       value={values.password || \"\"}\r\n  //                       required\r\n  //                     />\r\n  //                     <span className=\"floating-label\">Enter Password*</span>\r\n  //                     {errors.password && (\r\n  //                       <p className=\"help is-danger\">{errors.password}</p>\r\n  //                     )}\r\n  //                   </FormGroup>\r\n  //                 </div>\r\n  //                 <Button\r\n  //                   // onClick={() => handleLogin()}\r\n  //                   className=\"cta-book\"\r\n  //                   color=\"primary\"\r\n  //                   size=\"lg\"\r\n  //                   block\r\n  //                   type=\"submit\"\r\n  //                 >\r\n  //                   Login\r\n  //                 </Button>\r\n  //               </form>\r\n  //               <div className=\"d-flex\">\r\n  //                 <Link to=\"/signup\" className=\"ml-auto log-text\" href=\"#\">\r\n  //                   Don't have an account? Sign Up\r\n  //                 </Link>\r\n  //               </div>\r\n  //             </CardBody>\r\n  //           </Card>\r\n  //         </Col>\r\n  //       </Row>\r\n  //     </Container>\r\n  //   </div>\r\n  // );\r\n// };\r\n\r\nexport default SignIn;\r\n"]},"metadata":{},"sourceType":"module"}